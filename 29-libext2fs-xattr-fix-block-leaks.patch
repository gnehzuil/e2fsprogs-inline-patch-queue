From: Darrick J. Wong <darrick.wong@oracle.com>

libext2fs: fix block leak when releasing xattr block

If in the process of writing EAs to an inode we discover that we no
longer need the EA block, use the helper function to decrement the
block's usage count and release it, instead of (brokenly) open-coding
it.  Also we need to decrement i_blocks when freeing the EA block.

Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
diff --git a/lib/ext2fs/ext_attr.c b/lib/ext2fs/ext_attr.c
index 94bc89b..3e09d58 100644
--- a/lib/ext2fs/ext_attr.c
+++ b/lib/ext2fs/ext_attr.c
@@ -315,6 +315,9 @@ errcode_t ext2fs_free_ext_attr(ext2_filsys fs, ext2_ino_t ino,
 	ext2fs_file_acl_block_set(fs, (struct ext2_inode *)inode, 0);
 	if (header->h_refcount == 0)
 		ext2fs_block_alloc_stats2(fs, blk, -1);
+	err = ext2fs_iblk_sub_blocks(fs, (struct ext2_inode *)inode, 1);
+	if (err)
+		goto out2;
 
 	/* Write inode? */
 	if (inode == &i) {
@@ -549,13 +552,9 @@ skip_ea_block:
 	blk = ext2fs_file_acl_block(handle->fs, (struct ext2_inode *)inode);
 	if (!block_buf && blk) {
 		/* xattrs shrunk, free the block */
-		ext2fs_file_acl_block_set(handle->fs,
-					  (struct ext2_inode *)inode, 0);
-		err = ext2fs_iblk_sub_blocks(handle->fs,
-					     (struct ext2_inode *)inode, 1);
+		err = ext2fs_free_ext_attr(handle->fs, handle->ino, inode);
 		if (err)
 			goto out;
-		ext2fs_block_alloc_stats2(handle->fs, blk, -1);
 	}
 
 	/* Write the inode */
